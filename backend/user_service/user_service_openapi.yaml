openapi: 3.0.1
info:
  title: user service api
  version: 0.1.0
servers:
  - url: "{server}:{port}/api"
    variables:
      server:
        default: http://localhost
      port:
        default: "9090"
paths:
  /users:
    get:
      operationId: getUsers
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
    post:
      operationId: postUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "202":
          description: Accepted
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
  /users/{ids}:
    get:
      operationId: getUsersIds
      parameters:
        - name: ids
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/User"
                  - type: array
                    items:
                      $ref: "#/components/schemas/User"
        "202":
          description: Accepted
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
  /users/{id}:
    delete:
      operationId: deleteUsersId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "202":
          description: Accepted
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
  /users/{id}/subjects:
    put:
      operationId: putUsersIdSubjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectId"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "202":
          description: Accepted
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
    delete:
      operationId: deleteUsersIdSubjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectId"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "202":
          description: Accepted
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
  /users/{id}/subjects/{subjectId}/goals:
    put:
      operationId: putUsersIdSubjectsSubjectidGoals
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: subjectId
          in: path
          required: true
          schema:
            type: string
        - name: goalHours
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "202":
          description: Accepted
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
  /users/follow:
    put:
      operationId: putUsersFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Follow"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
    delete:
      operationId: deleteUsersFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Follow"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
  /users/requests:
    put:
      operationId: putUsersRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
    delete:
      operationId: deleteUsersRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request"
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorPayload"
components:
  schemas:
    ErrorPayload:
      required:
        - message
        - method
        - path
        - reason
        - status
        - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    Follow:
      required:
        - follower
        - following
      type: object
      properties:
        following:
          $ref: "#/components/schemas/ID"
        follower:
          $ref: "#/components/schemas/ID"
      additionalProperties: false
      description: |-
        Description.
        Scenario: User A follows User B (Based on Insta)
    ID:
      required:
        - id
      type: object
      properties:
        id:
          type: string
      additionalProperties: false
    Request:
      required:
        - requested
        - requestedBy
      type: object
      properties:
        requested:
          $ref: "#/components/schemas/ID"
        requestedBy:
          $ref: "#/components/schemas/ID"
      additionalProperties: false
      description: |-
        Description.
        Scenario: User A requests User B
    SubjectGoal:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        goalHours:
          type: number
          format: double
          default: 0
      additionalProperties: false
    SubjectId:
      required:
        - subject
      type: object
      properties:
        subject:
          $ref: "#/components/schemas/SubjectGoal"
      additionalProperties: false
    User:
      required:
        - email
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        subjectIds:
          type: array
          items:
            $ref: "#/components/schemas/SubjectGoal"
          default: []
        followersIds:
          type: array
          items:
            $ref: "#/components/schemas/ID"
        followingIds:
          type: array
          items:
            $ref: "#/components/schemas/ID"
        requestedIds:
          type: array
          items:
            $ref: "#/components/schemas/ID"
        requestedByIds:
          type: array
          items:
            $ref: "#/components/schemas/ID"
        isDeleted:
          type: boolean
          default: false
      additionalProperties: false
